service: task-manager

custom:
  settings:
    USERS_TABLE: task-manager-users
    TASKS_TABLE: task-manager-tasks

package:
  individually: true
  excludeDevDependencies: true

plugins:
  - serverless-offline
  - serverless-plugin-typescript
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:*
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USERS_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.TASKS_TABLE}'

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  auth:
    handler: dist/auth.bundle.authenticate
  login:
    handler: dist/auth.bundle.login
    events:
      - http:
          path: /api/auth/login
          method: post
          cors: true
  getUsers:
    handler: dist/users.bundle.getUsers
    events:
      - http:
          path: /api/users
          method: get
          cors: true
          authorizer: auth
  createUser:
    handler: dist/users.bundle.createUser
    events:
      - http:
          path: /api/users
          method: post
          cors: true
  deleteUser:
    handler: dist/users.bundle.deleteUser
    events:
      - http:
          path: /api/users/{id}
          method: delete
          cors: true
          authorizer: auth
  getTasks:
    handler: dist/tasks.bundle.getTasks
    events:
      - http:
          path: /api/tasks
          method: get
          cors: true
          authorizer: auth
  createTask:
    handler: dist/tasks.bundle.createTask
    events:
      - http:
          path: /api/tasks
          method: post
          cors: true
          authorizer: auth
  deleteTask:
    handler: dist/tasks.bundle.deleteTask
    events:
      - http:
          path: /api/tasks/{id}
          method: delete
          cors: true
          authorizer: auth
  createComment:
    handler: dist/comments.bundle.createComment
    events:
      - http:
          path: /api/comments/{taskId}
          method: post
          cors: true
          authorizer: auth
